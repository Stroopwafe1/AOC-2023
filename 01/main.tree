ui8[22050] s_buffer;

ref<ui8> GetNextNBytes(ui64 offset, ui64 n) {
	ui64 N = n;
	ref<ui8> returnValue = alloc(N);
	loop i, 0..N {
		returnValue[i] = s_buffer[offset + i];
	}
	return returnValue;
}

ui8 StrEquals(ref<ui8> s1, ref<ui8> s2, ui64 len) {
	ui64 length = len;
	loop i, 0..length {
		if s1[i] != s2[i] {
			return 0;
		}
	}
	return 1;
}

ui8 Part1(ui64 size) {
	ui64 sum = 0;
	ui8[2] numBuffer = {0, 0};
	ui8 buffLength = 0;
	loop i, 0..size {
		ui8 byte = s_buffer[i];
		if byte == 10 {
			ui8 tempSum = (numBuffer[0] * 10) + numBuffer[1];
			sum += tempSum;
			buffLength = 0;
			numBuffer = {0, 0};
		} else if (byte >= 48) & (byte <= 57) {
			numBuffer[buffLength] = (byte - 48);
			buffLength = 1;
			numBuffer[buffLength] = (byte - 48);
		}
	}
	stdout.write("Calibration sum part 1: ");
	stdout.writeln(sum);
	return 0;
}

ui8 Part2(ui64 size) {
	// 'o' => 1 jump 2
	// 'e' => 8 jump 4
	// 'n' => 9 jump 3
	// 't' => 2/3, look next
	// 'f' => 4/5, look next
	// 's' => 6/7, look next

	ui64 sum = 0;
	ui8[2] numBuffer = {0, 0};
	ui8 buffLength = 0;
	loop i, 0..size {
		ui8 byte = s_buffer[i];
		ref<ui8> nextBytes = GetNextNBytes(i, 5);
		if byte == 10 {
			ui8 tempSum = (numBuffer[0] * 10) + numBuffer[1];
			stdout.write(sum);
			stdout.write(" + ");
			stdout.write(tempSum);
			stdout.write(" = ");
			sum += tempSum;
			stdout.writeln(sum);
			buffLength = 0;
			numBuffer = {0, 0};
		} else if (byte >= 48) & (byte <= 57) {
			numBuffer[buffLength] = (byte - 48);
			buffLength = 1;
			numBuffer[buffLength] = (byte - 48);
		} else if StrEquals(nextBytes, "one", 3) {
			numBuffer[buffLength] = 1;
			buffLength = 1;
			numBuffer[buffLength] = 1;
		} else if StrEquals(nextBytes, "eight", 5) {
			numBuffer[buffLength] = 8;
			buffLength = 1;
			numBuffer[buffLength] = 8;
		} else if StrEquals(nextBytes, "nine", 4) {
			numBuffer[buffLength] = 9;
			buffLength = 1;
			numBuffer[buffLength] = 9;
		} else if StrEquals(nextBytes, "three", 5) {
			numBuffer[buffLength] = 3;
			buffLength = 1;
			numBuffer[buffLength] = 3;
		} else if StrEquals(nextBytes, "two", 3) {
			numBuffer[buffLength] = 2;
			buffLength = 1;
			numBuffer[buffLength] = 2;
		} else if StrEquals(nextBytes, "four", 4) {
			numBuffer[buffLength] = 4;
			buffLength = 1;
			numBuffer[buffLength] = 4;
		} else if StrEquals(nextBytes, "five", 4) {
			numBuffer[buffLength] = 5;
			buffLength = 1;
			numBuffer[buffLength] = 5;
		} else if StrEquals(nextBytes, "six", 3) {
			numBuffer[buffLength] = 6;
			buffLength = 1;
			numBuffer[buffLength] = 6;
		} else if StrEquals(nextBytes, "seven", 5) {
			numBuffer[buffLength] = 7;
			buffLength = 1;
			numBuffer[buffLength] = 7;
		}
		dealloc(nextBytes, 5);
	}
	stdout.write("Calibration sum part 2: ");
	stdout.writeln(sum);
	return 0;
}

ui8 main(cstring[] argv) {
	i32 fd = SYS_OPEN(argv[1], 0, 0);
	if (fd < 0) {
		stdout.writeln("Could not open file");
		return -1;
	}
	ui64 size = SYS_READ(fd, s_buffer, 22039);
	if (size == 0) {
		stdout.writeln("Could not read from file");
		return -1;
	}
	Part1(size);
	Part2(size);
	return 0;
}
