ui8[24110] s_buffer;

ui8 Part1(ui64 size) {
	ui64 length = size;
	ui64 sum = 0;

	ui8[3] numBuffer = {0, 0, 0};
	ui8 buffLength = 0;

	ui8[10] winningNumbers = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
	ui8 winningNumbersSize = 0;
	bool parseOurNumbers = false;
	ui8 currentGame = 0;
	ui8 matches = 0;
	loop i, 0..length {
		ui8 byte = s_buffer[i];
		if (byte >= '0') & (byte <= '9') {
			ui8 number = byte - '0';
			if buffLength == 0 {
				numBuffer[2] = number;
			} else if buffLength == 1 {
				numBuffer[1] = numBuffer[2];
				numBuffer[2] = number;
			} else {
				numBuffer[0] = numBuffer[1];
				numBuffer[1] = numBuffer[2];
				numBuffer[2] = number;
			}
			buffLength += 1;
		} else {
			if byte == '\n' {
				ui64 number = ((numBuffer[0] * 100) + (numBuffer[1] * 10)) + numBuffer[2];
				loop j, 0..winningNumbersSize {
					if winningNumbers[j] == number {
						matches += 1;
					}
				}
				if matches > 0 {
					ui32 points = (1 << (matches - 1));
					stdout.write("Game ");
					stdout.write(currentGame);
					stdout.write(": ");
					stdout.write(points);
					stdout.write(" points! Total is now ");
					sum += points;
					stdout.writeln(sum);
				}
				i += 4;
				parseOurNumbers = false;
				winningNumbers = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
				winningNumbersSize = 0;
				currentGame = 0;
				matches = 0;
				numBuffer = {0, 0, 0};
				buffLength = 0;
			} else if byte == '|' {
				parseOurNumbers = true;
			}
			if buffLength != 0 {
				ui64 number = ((numBuffer[0] * 100) + (numBuffer[1] * 10)) + numBuffer[2];
				if currentGame == 0 {
					currentGame = number;
				} else if !parseOurNumbers {
					winningNumbers[winningNumbersSize] = number;
					winningNumbersSize += 1;
				} else {
					loop j, 0..winningNumbersSize {
						if winningNumbers[j] == number {
							matches += 1;
						}
					}
				}
				numBuffer = {0, 0, 0};
				buffLength = 0;
			}
		}
	}
	stdout.write("Sum part 1: ");
	stdout.writeln(sum);
	return 0;
}

ui8 Part2(ui64 size) {

	return 0;
}

ui8 main(cstring[] argv) {
	i32 fd = SYS_OPEN(argv[1], 0, 0);
	if (fd < 0) {
		stdout.writeln("Could not open file");
		return -1;
	}
	ui64 size = SYS_READ(fd, \s_buffer, 24102);
	if (size == 0) {
		stdout.writeln("Could not read from file");
		return -1;
	}
	Part1(size);
	//Part2(size);
	return 0;
}
